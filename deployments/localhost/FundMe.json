{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "PriceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb26b16c9c4dbfb06bf872369e81b339507491fd81703cd93d3ec238addc55913",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "861968",
    "logsBloom": "0x
    "blockHash": "0x64404ffe868cb26eb1363367df09504ca5ee067dc47401408dcebb6b55ff9a2d",
    "transactionHash": "0xb26b16c9c4dbfb06bf872369e81b339507491fd81703cd93d3ec238addc55913",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "861968",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "01b7c62fb7a2a53d9fe35c2b3fb21112",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"PriceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface CurrentPriceFeedAddress) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            CurrentPriceFeedAddress\\n        );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount , AggregatorV3Interface CurrentPriceFeedAddress)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(CurrentPriceFeedAddress);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0xb6ef945c7f15f21e8a88805c3b0c9d7f28a17f1bb04396bf9dd29004ea002d6d\",\"license\":\"MIT\"},\"contracts/fundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface CurrentPriceFeedAddress;\\n    constructor(address PriceFeedAddress) {\\n        i_owner = msg.sender;\\n        CurrentPriceFeedAddress = AggregatorV3Interface(PriceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(CurrentPriceFeedAddress) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Sepolia Network.\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(CurrentPriceFeedAddress);\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\",\"keccak256\":\"0x55dda41545fb801cd79f6d58332d8a5960d805212e85157be474d79cb00f0ba8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f23380380610f238339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610dca806101596000396000f3fe6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a5921461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80630d8e6e2c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b6040516100af91906107df565b60405180910390f35b3480156100c457600080fd5b506100cd610380565b005b3480156100db57600080fd5b506100f660048036038101906100f1919061085d565b6105c2565b60405161010391906107df565b60405180910390f35b34801561011857600080fd5b506101216105da565b60405161012e91906107df565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105e7565b6040516101639190610899565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108e0565b61060d565b6040516101a09190610899565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461064c90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061096a565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027791906109b9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610356573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037a9190610a02565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610407576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104b25760006001828154811061042d5761042c610a2f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104aa90610a5e565b91505061040a565b50600067ffffffffffffffff8111156104ce576104cd610aa6565b5b6040519080825280602002602001820160405280156104fc5781602001602082028036833780820191505090505b506001908051906020019061051292919061071f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053990610b06565b60006040518083038185875af1925050503d8060008114610576576040519150601f19603f3d011682016040523d82523d6000602084013e61057b565b606091505b50509050806105bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b690610b67565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061061d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061065883610688565b90506000670de0b6b3a764000085836106719190610b87565b61067b9190610bf8565b9050809250505092915050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff9190610ca1565b5050509150506402540be400816107169190610d1c565b92505050919050565b828054828255906000526020600020908101928215610798579160200282015b828111156107975782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061073f565b5b5090506107a591906107a9565b5090565b5b808211156107c25760008160009055506001016107aa565b5090565b6000819050919050565b6107d9816107c6565b82525050565b60006020820190506107f460008301846107d0565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061082a826107ff565b9050919050565b61083a8161081f565b811461084557600080fd5b50565b60008135905061085781610831565b92915050565b600060208284031215610873576108726107fa565b5b600061088184828501610848565b91505092915050565b6108938161081f565b82525050565b60006020820190506108ae600083018461088a565b92915050565b6108bd816107c6565b81146108c857600080fd5b50565b6000813590506108da816108b4565b92915050565b6000602082840312156108f6576108f56107fa565b5b6000610904848285016108cb565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610954601b8361090d565b915061095f8261091e565b602082019050919050565b6000602082019050818103600083015261098381610947565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c4826107c6565b91506109cf836107c6565b92508282019050808211156109e7576109e661098a565b5b92915050565b6000815190506109fc816108b4565b92915050565b600060208284031215610a1857610a176107fa565b5b6000610a26848285016109ed565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a69826107c6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a9b57610a9a61098a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610af0600083610ad5565b9150610afb82610ae0565b600082019050919050565b6000610b1182610ae3565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b51600b8361090d565b9150610b5c82610b1b565b602082019050919050565b60006020820190508181036000830152610b8081610b44565b9050919050565b6000610b92826107c6565b9150610b9d836107c6565b9250828202610bab816107c6565b91508282048414831517610bc257610bc161098a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c03826107c6565b9150610c0e836107c6565b925082610c1e57610c1d610bc9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c4881610c29565b8114610c5357600080fd5b50565b600081519050610c6581610c3f565b92915050565b6000819050919050565b610c7e81610c6b565b8114610c8957600080fd5b50565b600081519050610c9b81610c75565b92915050565b600080600080600060a08688031215610cbd57610cbc6107fa565b5b6000610ccb88828901610c56565b9550506020610cdc88828901610c8c565b9450506040610ced888289016109ed565b9350506060610cfe888289016109ed565b9250506080610d0f88828901610c56565b9150509295509295909350565b6000610d2782610c6b565b9150610d3283610c6b565b9250828202610d4081610c6b565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d7857610d7761098a565b5b8282058414831517610d8d57610d8c61098a565b5b509291505056fea26469706673582212208509192b157dcc87f88e5420696ae557975ab066833f5523955a4b7993f5db9d64736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a5921461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80630d8e6e2c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b6040516100af91906107df565b60405180910390f35b3480156100c457600080fd5b506100cd610380565b005b3480156100db57600080fd5b506100f660048036038101906100f1919061085d565b6105c2565b60405161010391906107df565b60405180910390f35b34801561011857600080fd5b506101216105da565b60405161012e91906107df565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105e7565b6040516101639190610899565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108e0565b61060d565b6040516101a09190610899565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461064c90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061096a565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027791906109b9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610356573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037a9190610a02565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610407576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104b25760006001828154811061042d5761042c610a2f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104aa90610a5e565b91505061040a565b50600067ffffffffffffffff8111156104ce576104cd610aa6565b5b6040519080825280602002602001820160405280156104fc5781602001602082028036833780820191505090505b506001908051906020019061051292919061071f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053990610b06565b60006040518083038185875af1925050503d8060008114610576576040519150601f19603f3d011682016040523d82523d6000602084013e61057b565b606091505b50509050806105bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b690610b67565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061061d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061065883610688565b90506000670de0b6b3a764000085836106719190610b87565b61067b9190610bf8565b9050809250505092915050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff9190610ca1565b5050509150506402540be400816107169190610d1c565b92505050919050565b828054828255906000526020600020908101928215610798579160200282015b828111156107975782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061073f565b5b5090506107a591906107a9565b5090565b5b808211156107c25760008160009055506001016107aa565b5090565b6000819050919050565b6107d9816107c6565b82525050565b60006020820190506107f460008301846107d0565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061082a826107ff565b9050919050565b61083a8161081f565b811461084557600080fd5b50565b60008135905061085781610831565b92915050565b600060208284031215610873576108726107fa565b5b600061088184828501610848565b91505092915050565b6108938161081f565b82525050565b60006020820190506108ae600083018461088a565b92915050565b6108bd816107c6565b81146108c857600080fd5b50565b6000813590506108da816108b4565b92915050565b6000602082840312156108f6576108f56107fa565b5b6000610904848285016108cb565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610954601b8361090d565b915061095f8261091e565b602082019050919050565b6000602082019050818103600083015261098381610947565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c4826107c6565b91506109cf836107c6565b92508282019050808211156109e7576109e661098a565b5b92915050565b6000815190506109fc816108b4565b92915050565b600060208284031215610a1857610a176107fa565b5b6000610a26848285016109ed565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a69826107c6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a9b57610a9a61098a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610af0600083610ad5565b9150610afb82610ae0565b600082019050919050565b6000610b1182610ae3565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b51600b8361090d565b9150610b5c82610b1b565b602082019050919050565b60006020820190508181036000830152610b8081610b44565b9050919050565b6000610b92826107c6565b9150610b9d836107c6565b9250828202610bab816107c6565b91508282048414831517610bc257610bc161098a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c03826107c6565b9150610c0e836107c6565b925082610c1e57610c1d610bc9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c4881610c29565b8114610c5357600080fd5b50565b600081519050610c6581610c3f565b92915050565b6000819050919050565b610c7e81610c6b565b8114610c8957600080fd5b50565b600081519050610c9b81610c75565b92915050565b600080600080600060a08688031215610cbd57610cbc6107fa565b5b6000610ccb88828901610c56565b9550506020610cdc88828901610c8c565b9450506040610ced888289016109ed565b9350506060610cfe888289016109ed565b9250506080610d0f88828901610c56565b9150509295509295909350565b6000610d2782610c6b565b9150610d3283610c6b565b9250828202610d4081610c6b565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d7857610d7761098a565b5b8282058414831517610d8d57610d8c61098a565b5b509291505056fea26469706673582212208509192b157dcc87f88e5420696ae557975ab066833f5523955a4b7993f5db9d64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 382,
        "contract": "contracts/fundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 385,
        "contract": "contracts/fundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 387,
        "contract": "contracts/fundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 397,
        "contract": "contracts/fundMe.sol:FundMe",
        "label": "CurrentPriceFeedAddress",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)102"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)102": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}